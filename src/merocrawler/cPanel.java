/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */


package merocrawler;

import java.util.ArrayList;

/**
 *
 * @author asish
 */
public class cPanel extends javax.swing.JFrame {

    Thread threadOne;
    Thread threadTwo;
    Thread threadThree;
    Thread threadFour;
    InfiniteLoop loopOne;
    InfiniteLoop loopTwo;
    InfiniteLoop loopThree;
    InfiniteLoop loopFour;
    /**
     * Creates new form cPanel
     */
    public cPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tAreaInfo = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Start");
        jButton1.setActionCommand("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tAreaInfo.setColumns(20);
        tAreaInfo.setRows(5);
        jScrollPane1.setViewportView(tAreaInfo);

        jLabel2.setText("information");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 594, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel2)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 521, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
              if(jButton1.getText()== "Start")
              {
                  //Change Button's text
                  jButton1.setText("Stop");
                  
                  //Get all crawlerBaseLinks
                  ArrayList<CrawlerBaseObj> myList=MysqlCOnnect.getBaseList();
                  CrawlerBaseObj[] myArray= new CrawlerBaseObj[myList.size()];
                  myArray= myList.toArray(myArray);
                  double divider= 4;
                  
                  //Divide myArray into four Arrays
                  int rounded= myArray.length/4;
                  double nonRounded= myArray.length/divider;
                  double difference = (nonRounded-rounded)*100.0;
                  int differenceIntified = (int) difference;
                  int arrayOneSize=0+rounded, arrayTwoSize=0+rounded, arrayThreeSize=0+rounded, arrayFourSize=0+rounded;
                  
                  
                  switch (differenceIntified)
                  {
                      case 25: arrayOneSize=+ 1;
                          break;
                      case 50: arrayOneSize=+ 1; arrayTwoSize=+1;
                          break;
                      case 75: arrayOneSize=+ 1; arrayTwoSize=+1; arrayThreeSize=+1;
                          break;
                  
                  }
                  CrawlerBaseObj[] arrayOne = new CrawlerBaseObj[arrayOneSize];
                  CrawlerBaseObj[] arrayTwo = new CrawlerBaseObj[arrayTwoSize];
                  CrawlerBaseObj[] arrayThree = new CrawlerBaseObj[arrayThreeSize];
                  CrawlerBaseObj[] arrayFour = new CrawlerBaseObj[arrayFourSize];
                  
                  //Start threads
                  if(arrayOne.length>0)
                  {
                     loopOne= new InfiniteLoop(arrayOne);
                     threadOne= new Thread(loopOne);
                     threadOne.start();
                  }
                  if(arrayTwo.length>0)
                  {
                      loopTwo= new InfiniteLoop(arrayTwo);
                     threadTwo= new Thread(loopTwo);
                     threadTwo.start();
                  }
                  if(arrayThree.length>0)
                  {
                      loopThree= new InfiniteLoop(arrayThree);
                     threadThree= new Thread(loopThree);
                     threadThree.start();
                  }
                  if(arrayFour.length>0)
                  {
                      loopFour=new InfiniteLoop(arrayFour);
                     threadFour= new Thread(loopFour);
                     threadFour.start();
                     
                  }
              }
              else
              {
              
                  jButton1.setText("Start");
                  
              //stop threads commands
              //Send message to each Runnable infinite loopto stop after they complete ongoing iteration i.e. before starting next loop it checks whether to contunue loop
                  loopOne.stopper(true);
                  loopTwo.stopper(true);
                  loopThree.stopper(true);
                  loopFour.stopper(true);
              }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cPanel().setVisible(true);
            }
        });
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea tAreaInfo;
    // End of variables declaration//GEN-END:variables
}
